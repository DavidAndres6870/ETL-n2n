name: ecr_docker_deployment
on:
  push:
    branches:
      - main

jobs:

  build_docker:

    name: Build Image
    runs-on: ubuntu-latest

    outputs:
      image_uri: ${{ steps.image_uri.outputs.image_uri }}

    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      id: image_uri
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: elt-n2n
        IMAGE_TAG: ${{github.sha}}
      run: |
        # Build a docker image from Dockerfile
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        # Push image to ECR
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        # Get the image URI that was pushed to ECR
        echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        # aws lambda update-function-code \
        # --function-name etl-function \
        # --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG


  update_lambda:
    needs: build_docker
    runs-on: ubuntu-latest
    permissions:
        contents: read
    steps:

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.REGION }}
    - name: Debug IMAGE_URI   # Debugging step (optional)
      env:
        IMAGE_URI: ${{needs.build_docker.outputs.image_uri}}
      run: echo "hi ${{ needs.build_docker.outputs.IMAGE_URI }}"
    - name: Update Lambda function
      env:
        IMAGE_URI: ${{needs.build_docker.outputs.image_uri}}
      run: |
        aws lambda update-function-code --function-name etl-function \
          --image-uri "${{ needs.build_docker.outputs.IMAGE_URI }}"